<?xml version="1.0" encoding="UTF-8"?>
<appendix xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<title>Docbook</title>

<para>This document is written in DocBook.
The Docbook XML format offers a single-source platform for generating HTML, PDF
and other outputs. The generated HTML is very minimal, much less verbose than
for example the HTML generated by word processors.
</para>

<para>There are many online resources for the DocBook syntax, for example
<link xlink:href="http://www.docbook.org/tdg5/en/html/docbook.html"/>.
While these nicely describe the syntax, I had a hard time finding a concise
description of a tool set for translating DocBook into HTML or PDF.
The following seems to work on Linux and OS X.
</para>


<sect1>  <title>Example Document</title>
<para>This is an example document:
<programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<book xmlns="http://docbook.org/ns/docbook" version="5.0">
 <title>Very simple book</title>
 <chapter>
   <title>Hello</title>
   <para>Hello world!</para>
 </chapter>
</book>]]>
</programlisting>
</para>

<para>Most real-world documents would actually be split across files,
for example a <filename>example.xml</filename>:
<programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<book xmlns="http://docbook.org/ns/docbook" version="5.0"
      xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Very simple book</title>
 <xi:include href="chapter.xml" /> 
</book>]]>
</programlisting>
.. which includes a <filename>chapter.xml</filename> using XInclude:
<programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0">
  <title>Hello</title>
  <para>Hello world!</para>
</chapter>]]>
  </programlisting>
  </para>
</sect1>


<sect1>  <title>Style Sheets, Processor</title>
<para>XSL translations are used to convert the DocBook XML into other formats.
The necessary set of style sheets, for example the version <code>docbook-xsl-1.76.1</code>,
can be downloaded from <link xlink:href="http://sourceforge.net/projects/docbook/files"/>.
</para>
<para>In addition to the style sheets, a processing tool that can apply XSL translations
to XML documents is required. Linux and Mac OS X already include such a tool,
namely <code>xsltproc</code>. For Windows, you need to find such a tool.
</para>
</sect1>


<sect1>  <title>Generate HTML</title>
<para>HTML is generated by simply applying the appropriate translation:
<programlisting>xsltproc /path/to/docbook-xsl-1.76.1/html/docbook.xsl \
         example.xml  >example.html
</programlisting>
</para>
</sect1>


<sect1>  <title>Generate PDF</title>
<para>Fundamentally, PDF is created by first translating the DocBook XML
into an intermediate format like LaTeX, then using LaTeX to generate PDF.
A very convenient intermediate format is XSL-FO because the free, open source
Apache Java FOP tool can perform the transformation to FO and render the result as PDF.
</para>
<para>After downloading and installing Apache FOP, use a command like this:
<programlisting>fop -xsl /path/to/docbook-xsl-1.76.1/html/docbook.xsl \
    -xml example.xml  -pdf example.pdf
</programlisting>
</para>
</sect1>


<sect1>  <title>Options</title>
<para>Both <code>xsltproc</code> and <code>fop</code> support processing options
that influence the generated output:
<variablelist>
  <varlistentry>
    <term>html.stylesheet</term>
    <listitem>
      <para>
      Set to the name of a Cascading Style Sheet. Only applies to HTML output.
      </para>
    </listitem>    
  </varlistentry>
  <varlistentry>
    <term>generate.toc</term>
    <listitem>
      <para>
      Set to <code>0</code> to disable table of contents.
      </para>
    </listitem>    
  </varlistentry>
  <varlistentry>
    <term>generate.index</term>
    <listitem>
      <para>
      Set to <code>0</code> to disable index.
      </para>
    </listitem>    
  </varlistentry>
  <varlistentry>
    <term>chapter.autolabel</term>
    <listitem>
      <para>
      Set to <code>0</code> to disable numbering of chapters.
      </para>
    </listitem>    
  </varlistentry>
</variablelist>
</para>
<para>For <code>xsltproc</code>, they are passed as
<code>xsltproc --stringparam parm value ...</code>
For <code>fop</code>, use <code>fop -param parm value ...</code>
</para>
</sect1>

</appendix>